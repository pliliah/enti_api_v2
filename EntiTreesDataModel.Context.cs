//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace enti_api
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EntiTreesEntities : DbContext
    {
        public EntiTreesEntities()
            : base("name=EntiTreesEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<ShoppingCart> ShoppingCarts { get; set; }
        public virtual DbSet<ShoppingItem> ShoppingItems { get; set; }
    
        public virtual int DeleteShopItem(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteShopItem", iDParameter);
        }
    
        public virtual ObjectResult<InsertNewOrder_Result> InsertNewOrder(string inXML)
        {
            var inXMLParameter = inXML != null ?
                new ObjectParameter("InXML", inXML) :
                new ObjectParameter("InXML", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InsertNewOrder_Result>("InsertNewOrder", inXMLParameter);
        }
    
        public virtual int InsertNewShopItem(string title, string description, Nullable<double> price, Nullable<int> discount, string imageSrc, Nullable<int> quantity, Nullable<int> categoryId)
        {
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(double));
    
            var discountParameter = discount.HasValue ?
                new ObjectParameter("Discount", discount) :
                new ObjectParameter("Discount", typeof(int));
    
            var imageSrcParameter = imageSrc != null ?
                new ObjectParameter("ImageSrc", imageSrc) :
                new ObjectParameter("ImageSrc", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertNewShopItem", titleParameter, descriptionParameter, priceParameter, discountParameter, imageSrcParameter, quantityParameter, categoryIdParameter);
        }
    
        public virtual ObjectResult<SelectCategories_Result> SelectCategories()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectCategories_Result>("SelectCategories");
        }
    
        public virtual ObjectResult<SelectOrderByID_Result> SelectOrderByID(Nullable<int> orderID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectOrderByID_Result>("SelectOrderByID", orderIDParameter);
        }
    
        public virtual ObjectResult<SelectOrderItemsByOrderID_Result> SelectOrderItemsByOrderID(Nullable<int> orderID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectOrderItemsByOrderID_Result>("SelectOrderItemsByOrderID", orderIDParameter);
        }
    
        public virtual ObjectResult<SelectOrders_Result> SelectOrders()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectOrders_Result>("SelectOrders");
        }
    
        public virtual ObjectResult<SelectShoppingItems_Result> SelectShoppingItems(Nullable<int> categoryID, Nullable<int> itemID)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var itemIDParameter = itemID.HasValue ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectShoppingItems_Result>("SelectShoppingItems", categoryIDParameter, itemIDParameter);
        }
    
        public virtual int UpdateOrder(Nullable<int> orderID, Nullable<bool> isCompleted)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            var isCompletedParameter = isCompleted.HasValue ?
                new ObjectParameter("IsCompleted", isCompleted) :
                new ObjectParameter("IsCompleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateOrder", orderIDParameter, isCompletedParameter);
        }
    
        public virtual int UpdateShopItem(Nullable<int> iD, string title, string description, Nullable<double> price, Nullable<int> discount, string imageSrc, Nullable<int> quantity, Nullable<int> categoryId)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(double));
    
            var discountParameter = discount.HasValue ?
                new ObjectParameter("Discount", discount) :
                new ObjectParameter("Discount", typeof(int));
    
            var imageSrcParameter = imageSrc != null ?
                new ObjectParameter("ImageSrc", imageSrc) :
                new ObjectParameter("ImageSrc", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateShopItem", iDParameter, titleParameter, descriptionParameter, priceParameter, discountParameter, imageSrcParameter, quantityParameter, categoryIdParameter);
        }
    
        public virtual ObjectResult<SelectCustomers_Result> SelectCustomers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectCustomers_Result>("SelectCustomers");
        }
    }
}
